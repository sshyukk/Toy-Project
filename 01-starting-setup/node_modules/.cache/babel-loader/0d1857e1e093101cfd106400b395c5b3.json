{"ast":null,"code":"var _jsxFileName = \"/Users/sshyukk/Udemy/01-starting-setup/src/components/expenses/Expenses.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport \"./Expenses.css\";\nimport Card from \"../UI/Card.js\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Expenses = props => {\n  _s();\n\n  const [filteredYear, setFilteredYear] = useState('2019');\n\n  const filterChangeHandler = selectedYear => {\n    setFilteredYear(selectedYear);\n  };\n\n  const filteredExpenses = props.item.filter(expense => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n\n  let expensesContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No expenses found.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 27\n  }, this);\n\n  if (filteredExpenses.lenth > 0) {\n    expensesContent = filteredExpenses.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: expense.title,\n      amount: expense.amount,\n      date: expense.date\n    }, expense.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 62\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n        onChangeFilter: filterChangeHandler,\n        selected: filteredYear\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), expensesContent]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Expenses, \"EGzgx3ZGu1NQw0wtXW2UThPu2C0=\");\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"sources":["/Users/sshyukk/Udemy/01-starting-setup/src/components/expenses/Expenses.js"],"names":["React","useState","ExpenseItem","Card","ExpensesFilter","Expenses","props","filteredYear","setFilteredYear","filterChangeHandler","selectedYear","filteredExpenses","item","filter","expense","date","getFullYear","toString","expensesContent","lenth","map","title","amount","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,gBAAP;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,MAAD,CAAhD;;AACA,QAAMQ,mBAAmB,GAAIC,YAAD,IAAkB;AAC1CF,IAAAA,eAAe,CAACE,YAAD,CAAf;AACH,GAFD;;AAGA,QAAMC,gBAAgB,GAAGL,KAAK,CAACM,IAAN,CAAWC,MAAX,CAAkBC,OAAO,IAAI;AAClD,WAAOA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,OAA0CV,YAAjD;AACH,GAFwB,CAAzB;;AAGA,MAAIW,eAAe,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAtB;;AACA,MAAIP,gBAAgB,CAACQ,KAAjB,GAAyB,CAA7B,EAAgC;AAC5BD,IAAAA,eAAe,GAAGP,gBAAgB,CAACS,GAAjB,CAAsBN,OAAD,iBAAc,QAAC,WAAD;AAA8B,MAAA,KAAK,EAAEA,OAAO,CAACO,KAA7C;AAAoD,MAAA,MAAM,EAAEP,OAAO,CAACQ,MAApE;AAA4E,MAAA,IAAI,EAAER,OAAO,CAACC;AAA1F,OAAkBD,OAAO,CAACS,EAA1B;AAAA;AAAA;AAAA;AAAA,YAAnC,CAAlB;AACH;;AACD,sBACI;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA,8BACI,QAAC,cAAD;AAAgB,QAAA,cAAc,EAAEd,mBAAhC;AAAqD,QAAA,QAAQ,EAAEF;AAA/D;AAAA;AAAA;AAAA;AAAA,cADJ,EAYKW,eAZL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CA9BD;;GAAMb,Q;;KAAAA,Q;AAgCN,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\"\nimport ExpenseItem from \"./ExpenseItem\"\nimport \"./Expenses.css\"\nimport Card from \"../UI/Card.js\"\nimport ExpensesFilter from \"./ExpensesFilter\"\n\nconst Expenses = (props) => {\n    const [filteredYear, setFilteredYear] = useState('2019')\n    const filterChangeHandler = (selectedYear) => {\n        setFilteredYear(selectedYear)\n    }\n    const filteredExpenses = props.item.filter(expense => {\n        return expense.date.getFullYear().toString() === filteredYear\n    })\n    let expensesContent = <p>No expenses found.</p>\n    if (filteredExpenses.lenth > 0) {\n        expensesContent = filteredExpenses.map((expense) => (<ExpenseItem key={expense.id} title={expense.title} amount={expense.amount} date={expense.date} />))\n    }\n    return (\n        <div>\n            <Card className=\"expenses\">\n                <ExpensesFilter onChangeFilter={filterChangeHandler} selected={filteredYear} />\n                {/* [1] 조건부 렌더링 - 3항 연산자 */}\n                {/* { filteredExpenses.length === 0 ? (\n                    <p>No expenses found.</p>\n                ) : (\n                    filteredExpenses.map(expense => <ExpenseItem key={expense.id} title={expense.title} amount={expense.amount} date={expense.date} />)\n                )} */}\n                {/* [2] 조건부 렌더링 - && 연산자 */}\n                {/* { filteredExpenses.length === 0 && <p>No expenses found.</p> }\n                { filteredExpenses.length > 0 && filteredExpenses.map(expense => <ExpenseItem key={expense.id} title={expense.title} amount={expense.amount} date={expense.date} />) } */}\n                {/* [3] 조건부 렌더링 - 권장 */}\n                {expensesContent}\n            </Card>\n        </div> \n    )\n}\n\nexport default Expenses\n"]},"metadata":{},"sourceType":"module"}