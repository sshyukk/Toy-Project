{"ast":null,"code":"var _jsxFileName = \"/Users/sshyukk/Udemy/01-starting-setup/src/components/NewExpense/ExpenseForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./ExpenseForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpenseForm = () => {\n  _s();\n\n  // [1] state를 개별로 관리하기.\n  const [enteredTitle, setEnteredTitle] = useState('');\n  const [enteredAmount, setEnteredAmount] = useState('');\n  const [enteredDate, setEnteredDate] = useState(''); // [2] state를 하나로 관리하기.\n  // const [userInput, setUserInput] = useState({\n  //     enteredTitle: '',\n  //     enteredAmount: '',\n  //     enteredDate: ''\n  // })\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const expenseData = {\n      title: enteredTitle,\n      amount: enteredAmount,\n      date: new Date(enteredDate)\n    };\n    console.log(expenseData);\n    setEnteredTitle('');\n    setEnteredAmount('');\n    setEnteredDate('');\n    console.log(expenseData);\n  };\n\n  const titleChangeHandler = event => {\n    // [1] state를 개별로 관리하기.\n    setEnteredTitle(event.target.value);\n    console.log(enteredTitle); // [2] state를 하나로 관리하기.\n    // setUserInput({\n    //     ...userInput,\n    //     enteredTitle: event.target.value\n    // })\n    // console.log(userInput)\n    // [3] state를 하나로 관리하기. 함수를 매개변수로 사용.\n    // setUserInput((prevState) => {\n    //     return {\n    //         ...prevState,\n    //         enteredTitle: event.target.value\n    //     }\n    // })\n    // console.log(userInput)\n  };\n\n  const amountChangeHandler = event => {\n    // [1] state를 개별로 관리하기.\n    setEnteredAmount(event.target.value);\n    console.log(enteredAmount); // [2] state를 하나로 관리하기.\n    // setUserInput({\n    //     ...userInput,\n    //     enteredAmount: event.target.value\n    // })\n    // console.log(userInput)\n    // [3] state를 하나로 관리하기. 함수를 매개변수로 사용.\n    // setUserInput((prevState) => {\n    //     return {\n    //         ...prevState,\n    //         enteredAmount: event.target.value\n    //     }\n    // })\n    // console.log(userInput)\n  };\n\n  const dateChangeHandler = event => {\n    // [1] state를 개별로 관리하기.\n    setEnteredDate(event.target.value);\n    console.log(enteredDate); // [2] state를 하나로 관리하기.\n    // setUserInput({\n    //     ...userInput,\n    //     enteredDate: event.target.value\n    // })\n    // console.log(userInput)\n    // [3] state를 하나로 관리하기. 함수를 매개변수로 사용.\n    // setUserInput((prevState) => {\n    //     return {\n    //         ...prevState,\n    //         enteredDate: event.target.value\n    //     }\n    // })\n    // console.log(userInput)\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: enteredTitle,\n          onChange: titleChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: enteredAmount,\n          min: \"0.01\",\n          step: \"0.01\",\n          onChange: amountChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: enteredDate,\n          min: \"2019-01-01\",\n          max: \"2022-12-31\",\n          onChange: dateChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ExpenseForm, \"/TSOglz5ZV3C6oWQkp/FZ+OWqo4=\");\n\n_c = ExpenseForm;\nexport default ExpenseForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"sources":["/Users/sshyukk/Udemy/01-starting-setup/src/components/NewExpense/ExpenseForm.js"],"names":["React","useState","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","submitHandler","event","preventDefault","expenseData","title","amount","date","Date","console","log","titleChangeHandler","target","value","amountChangeHandler","dateChangeHandler"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\nimport \"./ExpenseForm.css\"\n\nconst ExpenseForm = () => {\n    // [1] state를 개별로 관리하기.\n    const [enteredTitle, setEnteredTitle] = useState('')\n    const [enteredAmount, setEnteredAmount] = useState('')\n    const [enteredDate, setEnteredDate] = useState('')\n    // [2] state를 하나로 관리하기.\n    // const [userInput, setUserInput] = useState({\n    //     enteredTitle: '',\n    //     enteredAmount: '',\n    //     enteredDate: ''\n    // })\n\n    const submitHandler = (event) => {\n        event.preventDefault()\n        const expenseData = {\n            title: enteredTitle,\n            amount: enteredAmount,\n            date: new Date(enteredDate)\n        }\n        console.log(expenseData)\n        setEnteredTitle('')\n        setEnteredAmount('')\n        setEnteredDate('')\n        console.log(expenseData)\n        \n    }\n\n    const titleChangeHandler = (event) => {\n        // [1] state를 개별로 관리하기.\n        setEnteredTitle(event.target.value)\n        console.log(enteredTitle)\n        // [2] state를 하나로 관리하기.\n        // setUserInput({\n        //     ...userInput,\n        //     enteredTitle: event.target.value\n        // })\n        // console.log(userInput)\n        // [3] state를 하나로 관리하기. 함수를 매개변수로 사용.\n        // setUserInput((prevState) => {\n        //     return {\n        //         ...prevState,\n        //         enteredTitle: event.target.value\n        //     }\n        // })\n        // console.log(userInput)\n    }\n    const amountChangeHandler = (event) => {\n        // [1] state를 개별로 관리하기.\n        setEnteredAmount(event.target.value)\n        console.log(enteredAmount)\n        // [2] state를 하나로 관리하기.\n        // setUserInput({\n        //     ...userInput,\n        //     enteredAmount: event.target.value\n        // })\n        // console.log(userInput)\n        // [3] state를 하나로 관리하기. 함수를 매개변수로 사용.\n        // setUserInput((prevState) => {\n        //     return {\n        //         ...prevState,\n        //         enteredAmount: event.target.value\n        //     }\n        // })\n        // console.log(userInput)\n    }\n    const dateChangeHandler = (event) => {\n        // [1] state를 개별로 관리하기.\n        setEnteredDate(event.target.value)\n        console.log(enteredDate)\n\n        // [2] state를 하나로 관리하기.\n        // setUserInput({\n        //     ...userInput,\n        //     enteredDate: event.target.value\n        // })\n        // console.log(userInput)\n        // [3] state를 하나로 관리하기. 함수를 매개변수로 사용.\n        // setUserInput((prevState) => {\n        //     return {\n        //         ...prevState,\n        //         enteredDate: event.target.value\n        //     }\n        // })\n        // console.log(userInput)\n    }\n    return (\n        <form onSubmit={submitHandler}>\n            <div className=\"new-expense__controls\">\n                <div className=\"new-expense__control\">\n                    <label>Title</label>\n                    <input type=\"text\" value={enteredTitle} onChange={titleChangeHandler} />\n                </div>\n                <div className=\"new-expense__control\">\n                    <label>Amount</label>\n                    <input type=\"number\" value={enteredAmount} min=\"0.01\" step=\"0.01\" onChange={amountChangeHandler} />\n                </div>\n                <div className=\"new-expense__control\">\n                    <label>Date</label>\n                    <input type=\"date\" value={enteredDate} min=\"2019-01-01\" max=\"2022-12-31\" onChange={dateChangeHandler} />\n                </div>\n            </div>\n            <div className=\"new-expense__actions\">\n                <button type=\"submit\">Add Expense</button>\n            </div>\n        </form>\n    )\n}\n\nexport default ExpenseForm\n"]},"metadata":{},"sourceType":"module"}